version: '2.2'

services:
  web:
    build: .
    container_name: django_web
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      gunicorn AFDash.wsgi:application
      --bind 0.0.0.0:8000
      --workers 3
      --access-logfile /app/logs/gunicorn-access.log
      --error-logfile /app/logs/gunicorn-error.log
    volumes:
      - .:/app
      - ./logs:/app/logs
    env_file:
      - .env
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./pg_logs:/var/log/postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
